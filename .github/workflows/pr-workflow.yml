name: Code Analysis & Tests on PR

on:
  pull_request:
    branches:
      - dev
    paths-ignore:
      - '**/README.md'

jobs:
  linting:
    runs-on: 'ubuntu-latest'
    name: Linting
    steps:
    - uses: actions/checkout@v2

    - name: Install node v16
      uses: actions/setup-node@v1
      with:
        node-version: 16

    - name: Install ESLint
      run: yarn add eslint

    - name: Run ESLint
      run: yarn run lint

    - name: Comment PR - Failure
      if: ${{ failure() }}
      uses: thollander/actions-comment-pull-request@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        message: |
          :x: The PR didn't pass linting, please review and update :exclamation:

    - name: Comment PR - Success
      if: ${{ success() }}
      uses: thollander/actions-comment-pull-request@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        message: |
          :white_check_mark: The PR passed linting, good job! :rocket:

  func-tests:
    runs-on: 'ubuntu-latest'
    name: Functional Tests
    steps:
      - uses: actions/checkout@v2

      - name: Install node v16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Set .env
        run: |
          mv .env.test .env
          echo "AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" >> .env

      - name: Start test DB
        run: docker-compose up -d

      - name: yarn install
        run: yarn install

      - name: Run DB migrations
        run: NODE_ENV=test node ace migration:run

      - name: Run functional tests
        run: NODE_ENV=test node ace test

      - name: Comment PR - Failure
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            :x: The PR didn't pass functional tests, please review and update :exclamation:

      - name: Comment PR - Success
        if: ${{ success() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            :white_check_mark: The PR passed functional tests, good job! :rocket:

  vulnerability:
    runs-on: 'ubuntu-latest'
    needs: func-tests
    name: Vulnerability scanner
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install grype
        run: curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - uses: actions/checkout@v2

      - name: Build image
        env:
          ENV_FILE_ENCODED: ${{ secrets.DEV_ENV_FILE }}
        run: |
          echo $ENV_FILE_ENCODED | base64 --decode > .env
          docker build --platform linux/amd64 -t localbuild/backend:scan-${{ github.sha }} .

      - name: Scan image
        run: grype localbuild/backend:scan-${{ github.sha }} --fail-on critical

      - name: Comment PR - Failure
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            :x: The PR didn't pass vulnerability scanner, please review and update :exclamation:

      - name: Comment PR - Success
        if: ${{ success() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            :white_check_mark: The PR passed vulnerability scanner, good job! :rocket:
